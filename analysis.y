%{
#include <stdio.h>
#include <stdlib.h>

int yylex();
void yyerror(char const *);

%}

%token TYPE AND_EXPR OR_EXPR PRINT WHILE IF FUNCTION RETURN EQUAL_EXPR COMPARE_EXPR PLUS MINUS MULT DIV COMMA NOT BOOLEAN
%token OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACES CLOSE_BRACES NEWLINE
%token IDENTIFIER INT FLOAT STRING

%start program

%%

program:
    | program statement NEWLINE
    ;

statement:
    ASSIGNMENT
    | PRINT OPEN_PARENTHESIS OR_EXPRESSION CLOSE_PARENTHESIS
    | WHILE OPEN_PARENTHESIS OR_EXPRESSION CLOSE_PARENTHESIS OPEN_BRACES program CLOSE_BRACES
    | IF OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_BRACES program CLOSE_BRACES ELSE_RULE
    | FUNCTION IDENTIFIER OPEN_PARENTHESIS argument_list CLOSE_PARENTHESIS OPEN_BRACES program return_statement CLOSE_BRACES
    | CALL_FUNCTION
    ;

argument_list:
    | IDENTIFIER
    | IDENTIFIER COMMA argument_list
    ;

return_statement:
    | RETURN OR_EXPRESSION NEWLINE
    ;

ASSIGNMENT:
    IDENTIFIER EQUAL_EXPR EXPRESSION NEWLINE
    ;

EXPRESSION:
    EXPRESSION PLUS TERM
    | EXPRESSION MINUS TERM
    | TERM
    ;

TERM:
    TERM MULT FACTOR
    | TERM DIV FACTOR
    | FACTOR
    ;

FACTOR:
    PLUS FACTOR
    | MINUS FACTOR
    | NOT FACTOR
    | OPEN_PARENTHESIS OR_EXPRESSION CLOSE_PARENTHESIS
    | INT
    | FLOAT
    | STRING
    | BOOLEAN
    | IDENTIFIER
    ;

CALL_FUNCTION:
    IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS
    | IDENTIFIER OPEN_PARENTHESIS argument_list CLOSE_PARENTHESIS
    ;

OR_EXPRESSION:
    AND_EXPRESSION
    | OR_EXPRESSION OR_EXPR AND_EXPRESSION
    ;

AND_EXPRESSION:
    EQUAL_EXPRESSION
    | AND_EXPRESSION AND_EXPR EQUAL_EXPRESSION
    ;

EQUAL_EXPRESSION:
    COMPARE_EXPRESSION
    | EQUAL_EXPRESSION EQUAL_EXPR COMPARE_EXPRESSION
    ;

COMPARE_EXPRESSION:
    EXPRESSION
    | EXPRESSION COMPARE_EXPR EXPRESSION
    ;

ELSE_RULE:
    | ELSE OPEN_BRACES program CLOSE_BRACES
    ;

ELSE:
    ELSE
    ;

%%
void yyerror(char const *s) {
    printf("%s\n", s);
}

int main(int argc, char **argv) {
    yyparse();
    return 0;
}
